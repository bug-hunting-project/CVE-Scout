from flask import request, jsonify
from flask_restx import Namespace, Resource


def count(sqlite_client):
    api = Namespace("count", description="CVE 관련 정보의 개수 출력 API")

    @api.route("/all")
    class CveAllCount(Resource):
        @api.doc(
            responses={200: "Success"}, 
            description="MongoDB에 저장된 모든 CVE의 개수 출력",
        )
        def get(self):
            cursor = sqlite_client.cursor()
            cursor.execute("SELECT COUNT(id) FROM vulnerability_metadata WHERE namespace LIKE 'nvd:cpe'")
            cve_count = cursor.fetchone()[0]
            cursor.close()

            return {"count": cve_count}, 200

    @api.route("/year-all")
    class CveYearlyCount(Resource):
        @api.doc(responses={200: "Success"}, description="각 연도별 CVE 개수 출력")
        def get(self):
            cursor = sqlite_client.cursor()
            cursor.execute("""
                SELECT SUBSTR(id, 5, 4) as year, COUNT(*) as count
                FROM vulnerability_metadata
                WHERE namespace LIKE 'nvd:cpe'
                GROUP BY year
            """)
            year_counts = {row[0]: row[1] for row in cursor.fetchall()}
            cursor.close()

            return year_counts, 200

    @api.route("/<int:year>")
    class CveYearCount(Resource):
        @api.doc(
            params={"year": "Year of the CVE"},
            responses={200: "Success"},
            description="MongoDB에 저장된 특정 연도의 CVE 개수 출력",
        )
        def get(self, year):
            cursor = sqlite_client.cursor()
            cursor.execute("""
                SELECT COUNT(id)
                FROM vulnerability_metadata
                WHERE namespace LIKE 'nvd:cpe' AND id LIKE ?
            """, (f"CVE-{year}-%",))
            cve_count = cursor.fetchone()[0]
            cursor.close()

            return {"count": cve_count}, 200
        
    return api