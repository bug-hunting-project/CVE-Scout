import os
from DB import Sqlite_Handler

class KEV_Parser:
    KEV_URL = "https://www.cisa.gov/sites/default/files/csv/known_exploited_vulnerabilities.csv"
    KEV_SAVE_PATH = "./.data/kev.csv"
    DB_PATH = "/home/lrtk/.cache/grype/db/5/vulnerability.db"
    TABLE_NAME = "kev"
    schema = {
        'cveID': 'TEXT',
        'vendorProject': 'TEXT',
        'product': 'TEXT',
        'vulnerabilityName': 'TEXT',
        'dateAdded': 'DATE',
        'shortDescription': 'TEXT',
        'requiredAction': 'TEXT',
        'dueDate': 'DATE',
        'notes': 'TEXT'
    }
    
    def wget_download_csv(self):
        exit_code = os.system(f"wget -q {self.KEV_URL} -O {self.KEV_SAVE_PATH}")
        if exit_code == 0:
            print("Download completed successfully.")
        else:
            print("Error occurred while downloading.")
            
    def save_to_db(self):
        # Ensure the directory for KEV_SAVE_PATH exists
        if not os.path.exists(os.path.dirname(self.KEV_SAVE_PATH)):
            os.makedirs(os.path.dirname(self.KEV_SAVE_PATH))

        # Initialize the SQLite handler
        handler = Sqlite_Handler(self.DB_PATH)
        
        # Create the table if it doesn't exist
        if not handler.create_table(self.TABLE_NAME, self.schema):
            handler.delete_table(self.TABLE_NAME)
        
        handler.create_table(self.TABLE_NAME, self.schema)
        
        # Insert the data from the CSV file into the table using import_csv method
        import_csv_result = handler.import_csv(self.KEV_SAVE_PATH, self.TABLE_NAME, self.schema)
        if import_csv_result:
            print("Data imported successfully.")
        else:
            print("Error occurred while importing data.")

    def run(self):
        self.wget_download_csv()
        self.save_to_db()

if __name__ == "__main__":
    parser = KEV_Parser()
    parser.run()
    