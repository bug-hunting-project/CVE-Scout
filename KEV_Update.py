from DB import Sqlite_Handler
import os

# Constants
CVE_PATH = "./.data/kev.csv"
CSV_URL = "https://www.cisa.gov/sites/default/files/csv/known_exploited_vulnerabilities.csv"
DB_PATH = "/home/lrtk/.cache/grype/db/5/vulnerability.db"
TABLE_NAME = "kev"

# Schema for the table
schema = {
    'cveID': 'TEXT',
    'vendorProject': 'TEXT',
    'product': 'TEXT',
    'vulnerabilityName': 'TEXT',
    'dateAdded': 'DATE',
    'shortDescription': 'TEXT',
    'requiredAction': 'TEXT',
    'dueDate': 'DATE',
    'notes': 'TEXT'
}

def ensure_directory_exists(directory):
    """Ensure the given directory exists. If not, create it."""
    if not os.path.exists(directory):
        os.makedirs(directory)

def main():
    # Ensure the directory for CVE_PATH exists
    ensure_directory_exists(os.path.dirname(CVE_PATH))

    # Download the CSV file
    Sqlite_Handler.wget_download_csv(csv_url=CSV_URL, csv_path=CVE_PATH)

    # Initialize the SQLite handler
    handler = Sqlite_Handler(DB_PATH)

    # Delete the existing table (if exists)
    if handler.delete_table(TABLE_NAME):
        print(f"Successfully deleted {TABLE_NAME} table.")
    else:
        print(f"Failed to delete {TABLE_NAME} table or table does not exist.")

    # Create a new table
    if handler.create_table(TABLE_NAME, schema):
        print(f"Successfully created {TABLE_NAME} table.")
    else:
        print(f"Failed to create {TABLE_NAME} table or table already exists.")

    # Import data from the CSV file to the table
    handler.import_csv(csv_path=CVE_PATH, table_name=TABLE_NAME, schema=schema)

if __name__ == "__main__":
    main()
