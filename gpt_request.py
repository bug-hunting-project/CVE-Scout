key = "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"
import openai
import db_parser
message = []


class gpt:
  def command(get_uuid):
  # while True:
  # content = input("User: ")
    a = db_parser.db_parse.parser(get_uuid)

    for i in a:
        messages = []
        try:
          openai.api_key = "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"
          content = """CVE 정보: {}
          취약점 설명: {} 
          CVSS정보: {}
          
          에 대한 조치방안을 다음과 같은 형식으로 요약해줘 이때 버전 업그레이드의 조치방안은 빼줘 그리고 조치방안은 5개만 알려줘
          조치 방안
          1. ~~~~
          2. ~~~~
          3. ~~~~
          4. ~~~~
          5. ~~~~
          
          """.format(i[0],i[1],i[2])
          # {"role": "assistant", "content": "조치방안은 5개까지만 적어줘"}
          messages.append({"role":"user", "content":content})
          messages.append({"role": "assistant", "content": "조치방안은 5개까지만 적어줘"})

          completion = openai.ChatCompletion.create(
            model="gpt-3.5-turbo-0613",
            messages=messages,
          )

          chat_response = completion.choices[0].message.content
          print(f'ChatGPT: {chat_response}') # 실제 출력 부분
          messages.append({"role":"assistant", "content": chat_response})
          if chat_response == "":
            exit()
        except Exception as e:
          print(e)
          pass